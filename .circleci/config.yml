
version: 2.1

setup_env: &setup_env
  run:
    name: setup env variables
    command: |
      cd src/app
      echo DEBUG=0 >> .env
      echo SQL_ENGINE=django.db.backends.postgresql >> .env
      echo DATABASE=postgres >> .env
      echo SECRET_KEY=$SECRET_KEY >> .env
      echo SQL_DATABASE=$SQL_DATABASE >> .env
      echo SQL_USER=$SQL_USER >> .env
      echo SQL_PASSWORD=$SQL_PASSWORD >> .env
      echo SQL_HOST=$SQL_HOST >> .env
      echo SQL_PORT=$SQL_PORT >> .env
      echo DJANGO_ALLOWED_HOSTS=$ALLOWED_HOSTS >> .env
      echo TAG="0.1.$CIRCLE_BUILD_NUM" >> .env


jobs:
  build-deploy-dev:
    machine: true
    steps:
      - checkout
      - *setup_env
      - run:
          name: Build Docker image
          command: |
            docker-compose -f src/docker-compose.dev.yaml up -d --build 

      - run:
          name: Build and push Docker image to Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
            docker tag $IMAGE_NAME registry.heroku.com/$APP_NAME/web
            docker push registry.heroku.com/$APP_NAME/web
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a $APP_NAME web
  
  build-prod:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - *setup_env
      - run:
          name: Build Docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker pull web:$TAG || true
            docker pull api:$TAG || true
            docker pull nginx:$TAG || true
            docker-compose -f src/docker-compose.dev.yaml build
            docker ps
            docker push web:$TAG
            docker push image:$TAG
            docker push nginx:$TAG

  deploy-prod:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - fe3:8f:a5:d6:d8:95:8a:ff:c4:81:91:2e:67:0c:00:00
      - *setup_env
      - run:
          name: Deploy 
          command: |
            chmod +x src/deploy_project.sh
            scp  -o StrictHostKeyChecking=no -r src/app/.env  $CIRCLECI_USER@$VU_IP:/home/circleci/app
            scp  -o StrictHostKeyChecking=no -r  src/docker-compose.prod.yaml $CIRCLECI_USER@$VU_IP:/home/circleci/app
            ./src/deploy_project.sh


workflows:
  build-deploy:
    jobs:
      - build-deploy-dev:
          filters:
            branches:
              only:
                - main
      - build-prod:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
            # branches:
            #   only:
            #     - main
      - approve-prod:
          type: approval
          requires:
            - build-prod
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
            # branches:
            #   only:
            #     - main
      - deploy-prod:
          requires:
            - approve-prod
            - build-prod
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
            # branches:
            #   only:
            #     - main
          